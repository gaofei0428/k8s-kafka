apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kafdrop
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafdrop
    helm.sh/chart: kafdrop-0.1.2
  name: kafdrop
  namespace: elastic-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: kafdrop
        app.kubernetes.io/name: kafdrop
    spec:
      containers:
      - env:
        - name: KAFKA_BROKERCONNECT
          value: 10.43.145.37:9092
        - name: KAFKA_PROPERTIES
        - name: KAFKA_TRUSTSTORE
        - name: KAFKA_KEYSTORE
        - name: JVM_OPTS
          value: -Xms32M -Xmx64M
        - name: JMX_PORT
          value: "8686"
        - name: HOST
        - name: SERVER_SERVLET_CONTEXTPATH
        - name: KAFKA_PROPERTIES_FILE
          value: kafka.properties
        - name: KAFKA_TRUSTSTORE_FILE
          value: kafka.truststore.jks
        - name: KAFKA_KEYSTORE_FILE
          value: kafka.keystore.jks
        - name: SERVER_PORT
          value: "9000"
        - name: CMD_ARGS
        image: obsidiandynamics/kafdrop:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: kafdrop
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 1280Mi
          requests:
            cpu: 1m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        kafka: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: kafka
        operator: Exists
