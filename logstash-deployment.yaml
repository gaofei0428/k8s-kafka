apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elastic-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: logstash
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: logstash
      name: logstash
    spec:
      containers:
      - image: docker.elastic.co/logstash/logstash:7.4.2
        imagePullPolicy: IfNotPresent
        name: logstash
        ports:
        - containerPort: 5044
          name: logstash
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/localtime
          name: tz
        - mountPath: /usr/share/logstash/config
          name: config
        - mountPath: /usr/share/logstash/mycfg
          name: logstash
        - mountPath: /usr/share/logstash/cd
          name: ca
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/localtime
          type: ""
        name: tz
      - configMap:
          defaultMode: 420
          items:
          - key: logstash.yml
            path: logstash.yml
          - key: pipelines.yml
            path: pipelines.yml
          name: logstash-config
        name: config
      - configMap:
          defaultMode: 420
          name: logstash-config
        name: logstash
      - name: ca
        secret:
          defaultMode: 420
          secretName: elasticsearch-es-http-certs-public
